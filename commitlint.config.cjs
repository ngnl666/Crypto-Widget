module.exports = {
	ignores: [(commit) => commit.includes('init')],
	extends: ['@commitlint/config-conventional'],
	rules: {
		'body-leading-blank': [2, 'always'],
		'header-max-length': [2, 'always', 72],
		'subject-empty': [2, 'never'],
		'type-empty': [2, 'never'],
		'type-enum': [2, 'always', ['feat', 'fix', 'docs', 'style', 'refactor', 'perf', 'test', 'build', 'chore']],
	},
	prompt: {
		messages: {
			type: "Select the type of change that you're committing:",
			scope: 'Denote the SCOPE of this change (optional):',
			subject: 'Write a SHORT, IMPERATIVE tense description of the change:\n',
			body: 'Provide a LONGER description of the change (optional). Use "|" to break new line:\n',
			confirmCommit: 'Are you sure you want to proceed with the commit above?',
		},
		types: [
			{
				value: 'feat',
				name: 'feat:     🚀  A new feature',
				emoji: '🚀',
			},
			{
				value: 'fix',
				name: 'fix:      🐛  A bug fix',
				emoji: '🐛',
			},
			{
				value: 'docs',
				name: 'docs:     📚  Documentation only changes',
				emoji: '📚',
			},
			{
				value: 'style',
				name: 'style:    🎨  Changes that do not affect the meaning of the code',
				emoji: '🎨',
			},
			{
				value: 'refactor',
				name: 'refactor: 🛠   A code change that neither fixes a bug nor adds a feature',
				emoji: '🛠',
			},
			{
				value: 'perf',
				name: 'perf:     ⚡️  A code change that improves performance',
				emoji: '⚡️',
			},
			{
				value: 'test',
				name: 'test:     ✅  Adding missing tests or correcting existing tests',
				emoji: '✅',
			},
			{
				value: 'build',
				name: 'build:    📦️   Changes that affect the build system or external dependencies',
				emoji: '📦️',
			},
			{
				value: 'chore',
				name: "chore:    ♻️  Other changes that don't modify src or test files",
				emoji: '♻️',
			},
		],
		useEmoji: true,
		themeColorCode: '',
		scopes: [],
		allowCustomScopes: true,
		allowEmptyScopes: true,
		customScopesAlign: 'bottom',
		customScopesAlias: 'custom',
		emptyScopesAlias: 'empty',
		upperCaseSubject: false,
		allowBreakingChanges: ['feat', 'fix'],
		breaklineNumber: 72,
		breaklineChar: '|',
		skipQuestions: [],
		customIssuePrefixsAlign: 'top',
		emptyIssuePrefixsAlias: 'skip',
		customIssuePrefixsAlias: 'custom',
		allowCustomIssuePrefixs: true,
		allowEmptyIssuePrefixs: true,
		confirmColorize: true,
		minSubjectLength: 0,
		scopeOverrides: undefined,
		defaultBody: '',
		defaultIssues: '',
		defaultScope: '',
		defaultSubject: '',
	},
};
